[{"C:\\Users\\LuisRG17\\Desktop\\U\\Compiladores\\maquinaTuring\\src\\store.js":"1","C:\\Users\\LuisRG17\\Desktop\\U\\Compiladores\\maquinaTuring\\src\\components\\footer.jsx":"2","C:\\Users\\LuisRG17\\Desktop\\U\\Compiladores\\maquinaTuring\\src\\components\\settings.jsx":"3","C:\\Users\\LuisRG17\\Desktop\\U\\Compiladores\\maquinaTuring\\src\\library\\funciones.js":"4"},{"size":617,"mtime":1606885612406,"results":"5","hashOfConfig":"6"},{"size":1403,"mtime":1606868516828,"results":"7","hashOfConfig":"6"},{"size":30159,"mtime":1607092099701,"results":"8","hashOfConfig":"6"},{"size":4853,"mtime":1607090000954,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"7xwzij",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\LuisRG17\\Desktop\\U\\Compiladores\\maquinaTuring\\src\\store.js",["19"],"C:\\Users\\LuisRG17\\Desktop\\U\\Compiladores\\maquinaTuring\\src\\components\\footer.jsx",[],"C:\\Users\\LuisRG17\\Desktop\\U\\Compiladores\\maquinaTuring\\src\\components\\settings.jsx",["20","21","22","23","24","25","26","27","28","29"],"import React, { useState, useEffect} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { convertirEnVector, generarRecorrido, convertirEnVectorAux, cadenaProcesada, obtenerVelocidad } from '../library/funciones';\r\nimport { red } from '../library/vis';\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Settings = ({ cadenaAMontar,  recorrido, establecerCadenaEnLaCinta, establecerRecorrido }) => {\r\n    \r\n    const [ cadena, setCadena ] = useState('');\r\n    const [ pasos, setPasos ] = useState(false);\r\n    const [ velocidad, setVelocidad ] = useState(50);\r\n    const [ sms, setSms ] = useState('Solo se aceptan a y b(minusculas).');\r\n    const [ j, setJ ] = useState(0);\r\n    const regex = /^[a-b]{2,18}$/;\r\n\r\n\r\n    //contador del paso a paso\r\n\r\n    // useEffect(()=>{\r\n    //     console.log(\"effect settingss => \", cadenaAMontar);\r\n    // },[cadenaAMontar]);\r\n\r\n    useEffect(()=>{\r\n        // console.log(cadenaProcesada([\"#\",\"a\",\"b\",\"b\",\"b\",\"#\"]));\r\n        if(pasos){\r\n            if(document.getElementById(\"cargar\").classList.contains(\"cargado\") && !cadenaProcesada(cadenaAMontar)){\r\n                document.getElementById(\"siguiente\").classList.remove(\"desactivado\")\r\n            }\r\n        }\r\n             \r\n        if(!pasos){\r\n            if(document.getElementById(\"cargar\").classList.contains(\"cargado\") && !cadenaProcesada(cadenaAMontar)){\r\n                document.getElementById(\"iniciar\").classList.remove(\"desactivado\")\r\n            }\r\n        }\r\n         \r\n    },[pasos]);\r\n\r\n    useEffect(()=>{\r\n        console.log(\"entro en el effect de toggle\");\r\n        if(!pasos){\r\n            if(regex.test(document.getElementById(\"entrada\").value)){\r\n                document.getElementById(\"cadena\").classList.add(\"bien\");\r\n                document.getElementById(\"cadena\").classList.remove(\"mal\");\r\n                document.getElementById(\"icono\").classList.add(\"fa-check-circle\");\r\n                document.getElementById(\"icono\").classList.remove(\"fa-times-circle\");\r\n                \r\n                // document.getElementById(\"iniciar\").classList.remove(\"desactivado\");\r\n                // document.getElementById(\"pausar\").classList.remove(\"desactivado\");\r\n                // document.getElementById(\"reIniciar\").classList.remove(\"desactivado\");\r\n                document.getElementById(\"cargar\").classList.remove(\"desactivado\");\r\n                // document.getElementById(\"toggleState\").classList.remove(\"desactivado\");\r\n                setSms(\"OK Puedo trabajar con esta cadena\");\r\n                setCadena(document.getElementById(\"entrada\").value);\r\n            }\r\n            else{\r\n                document.getElementById(\"cadena\").classList.add(\"mal\");\r\n                document.getElementById(\"cadena\").classList.remove(\"bien\");\r\n                document.getElementById(\"icono\").classList.remove(\"fa-check-circle\");\r\n                document.getElementById(\"icono\").classList.add(\"fa-times-circle\");\r\n\r\n                // if(document.getElementById(\"cargar\").classList.contains(\"desactivado\"))\r\n                //         document.getElementById(\"iniciar\").classList.add(\"desactivado\");\r\n                // document.getElementById(\"iniciar\").classList.add(\"desactivado\");\r\n                // document.getElementById(\"pausar\").classList.add(\"desactivado\");\r\n                // document.getElementById(\"reIniciar\").classList.add(\"desactivado\");\r\n                document.getElementById(\"cargar\").classList.add(\"desactivado\");\r\n                // document.getElementById(\"toggleState\").classList.add(\"desactivado\");\r\n                setSms(\"Esta cadena no es correcta...!\");\r\n            }\r\n        }\r\n        else{\r\n            if(regex.test(document.getElementById(\"entrada\").value)){\r\n                document.getElementById(\"cadena\").classList.add(\"bien\");\r\n                document.getElementById(\"cadena\").classList.remove(\"mal\");\r\n                document.getElementById(\"icono\").classList.add(\"fa-check-circle\");\r\n                document.getElementById(\"icono\").classList.remove(\"fa-times-circle\");\r\n\r\n                // document.getElementById(\"siguiente\").classList.remove(\"desactivado\");\r\n                document.getElementById(\"cargar\").classList.remove(\"desactivado\");\r\n\r\n                setSms(\"OK Puedo trabajar con esta cadena\");\r\n                setCadena(document.getElementById(\"entrada\").value);\r\n            }\r\n            else{\r\n                document.getElementById(\"cadena\").classList.add(\"mal\");\r\n                document.getElementById(\"cadena\").classList.remove(\"bien\");\r\n                document.getElementById(\"icono\").classList.remove(\"fa-check-circle\");\r\n                document.getElementById(\"icono\").classList.add(\"fa-times-circle\");\r\n\r\n                // if(document.getElementById(\"cargar\").classList.contains(\"desactivado\"))\r\n                //         document.getElementById(\"siguiente\").classList.add(\"desactivado\");\r\n                // document.getElementById(\"siguiente\").classList.add(\"desactivado\");\r\n                document.getElementById(\"cargar\").classList.add(\"desactivado\");\r\n\r\n                setSms(\"Esta cadena no es correcta...!\");\r\n            }\r\n        }\r\n\r\n    },[pasos])\r\n\r\n    useEffect(()=>{document.getElementById(\"cadena\").classList.remove(\"mal\")},[]);\r\n\r\n    const handleChange = e => {\r\n        console.log(e.target.name,\" => \",e.target.value);\r\n        \r\n        if(e.target.name === \"deslizante\") setVelocidad(e.target.value);\r\n        \r\n        if(e.target.name === \"cadena\"){\r\n            if(!pasos){\r\n                if(regex.test(e.target.value)){\r\n                    document.getElementById(\"cadena\").classList.add(\"bien\");\r\n                    document.getElementById(\"cadena\").classList.remove(\"mal\");\r\n                    document.getElementById(\"icono\").classList.add(\"fa-check-circle\");\r\n                    document.getElementById(\"icono\").classList.remove(\"fa-times-circle\");\r\n\r\n                    // document.getElementById(\"iniciar\").classList.add(\"desactivado\");                    \r\n                    // document.getElementById(\"pausar\").classList.remove(\"desactivado\");\r\n                    // document.getElementById(\"reIniciar\").classList.remove(\"desactivado\");\r\n                    document.getElementById(\"cargar\").classList.remove(\"desactivado\");\r\n\r\n                    // document.getElementById(\"toggleState\").classList.remove(\"desactivado\");\r\n                    setSms(\"OK Puedo trabajar con esta cadena\");\r\n                    setCadena(e.target.value);\r\n                }\r\n                else{\r\n                    document.getElementById(\"cadena\").classList.add(\"mal\");\r\n                    document.getElementById(\"cadena\").classList.remove(\"bien\");\r\n                    document.getElementById(\"icono\").classList.remove(\"fa-check-circle\");\r\n                    document.getElementById(\"icono\").classList.add(\"fa-times-circle\");\r\n\r\n                    // if(document.getElementById(\"cargar\").classList.contains(\"desactivado\"))\r\n                    //     document.getElementById(\"iniciar\").classList.add(\"desactivado\");\r\n                    // document.getElementById(\"pausar\").classList.add(\"desactivado\");\r\n                    // document.getElementById(\"reIniciar\").classList.add(\"desactivado\");\r\n                    document.getElementById(\"cargar\").classList.add(\"desactivado\");\r\n\r\n                    // document.getElementById(\"toggleState\").classList.add(\"desactivado\");\r\n                    setSms(\"Esta cadena no es correcta...!\");\r\n                }\r\n            }\r\n            else{\r\n                if(regex.test(e.target.value)){\r\n                    document.getElementById(\"cadena\").classList.add(\"bien\");\r\n                    document.getElementById(\"cadena\").classList.remove(\"mal\");\r\n                    document.getElementById(\"icono\").classList.add(\"fa-check-circle\");\r\n                    document.getElementById(\"icono\").classList.remove(\"fa-times-circle\");\r\n\r\n                    // document.getElementById(\"siguiente\").classList.remove(\"desactivado\");\r\n                    document.getElementById(\"cargar\").classList.remove(\"desactivado\");\r\n\r\n                    setSms(\"OK Puedo trabajar con esta cadena\");\r\n                    setCadena(e.target.value);\r\n                }\r\n                else{\r\n                    document.getElementById(\"cadena\").classList.add(\"mal\");\r\n                    document.getElementById(\"cadena\").classList.remove(\"bien\");\r\n                    document.getElementById(\"icono\").classList.remove(\"fa-check-circle\");\r\n                    document.getElementById(\"icono\").classList.add(\"fa-times-circle\");\r\n\r\n                    // if(document.getElementById(\"cargar\").classList.contains(\"desactivado\"))\r\n                    //     document.getElementById(\"siguiente\").classList.add(\"desactivado\");\r\n                    // document.getElementById(\"siguiente\").classList.add(\"desactivado\");\r\n                    document.getElementById(\"cargar\").classList.add(\"desactivado\");\r\n\r\n                    setSms(\"Esta cadena no es correcta...!\");\r\n                }\r\n            }\r\n        } \r\n    }\r\n\r\n    const construirNuevoVector = (index,element,vector) => {\r\n        let vectorRetornar = vector;\r\n        for (let x = 0; x < vectorRetornar.length; x++) {\r\n            if(x === index){\r\n                vectorRetornar[x] = element\r\n            }\r\n        }\r\n        // vectorRetornar.push(\"x\");\r\n        return vectorRetornar;\r\n    }\r\n\r\n    const handleClick = e => {\r\n\r\n        if(e.target.id.includes(\"cargar\")){\r\n            console.log(\"Clickaste => \",\"cargar\");\r\n            if(document.getElementById(\"cargar\").classList.contains(\"desactivado\")){\r\n               // alert(\"Mientras la cadena de entrada este vacia o sea incorrecta, no puedes cargar la maquina\")\r\n               MySwal.fire({\r\n                title: \"Error al cargar la maquina\",\r\n                html: <p>No se puede cargar la máquina<br/>\r\n                        Esto puede estar pasando por una de dos razones:<br/><br/>\r\n                        1.) Mientras la cadena de entrada este vacia o sea incorrecta.<br/><br/>\r\n                        2.) Empezaste un proceso: si sea manual debes terminarlo y si es automático espera a que termine.\r\n                      </p>,\r\n                footer: \"ERROR\",\r\n                icon: 'error',\r\n              });\r\n            }\r\n            else{\r\n                //ejecuta la funcion que pone los datos en la cinta\r\n                establecerCadenaEnLaCinta(convertirEnVector(cadena));\r\n                // setCadenaParcial(convertirEnVector(cadena));\r\n                // console.log(\"sin effect\",cadenaMontar);\r\n                establecerRecorrido(generarRecorrido(convertirEnVector(cadena)));\r\n                // console.log(\"XXXXXXXXXX\", pasos);\r\n                if(!pasos) document.getElementById(\"iniciar\").classList.remove(\"desactivado\");\r\n                else document.getElementById(\"siguiente\").classList.remove(\"desactivado\");\r\n                \r\n\r\n                document.getElementById(\"cargar\").classList.add(\"cargado\");\r\n            }\r\n        } \r\n\r\n        if(e.target.id.includes(\"iniciar\")){\r\n            console.log(\"Clickaste => \",\"inicar\");\r\n            if(document.getElementById(\"iniciar\").classList.contains(\"desactivado\")){\r\n                //alert(\"Mientras la cadena de entrada este vacia o sea incorrecta, no puedes iniciar\\nRecuerda cargar la maquina antes de iniciar\");\r\n                if(document.getElementById(\"cargar\").classList.contains(\"desactivado\")){\r\n                    MySwal.fire({\r\n                        \r\n                        title: \"Error al iniciar\",\r\n                        html: <p>Ten en cuenta las siguientes recomendaciones: <br/><br/>\r\n                            1.) Recuerda cargar la maquina y mientras la cadena de entrada este vacia o sea    incorrecta, no puedes iniciar. <br/><br/>\r\n                            2.) Si ya iniciaste un proceso debes esperar a que este finalice. \r\n                        </p>,\r\n                        footer: \"ERROR\",\r\n                        icon: 'error'\r\n                    });\r\n                }\r\n                else{\r\n                    if(!document.getElementById(\"cargar\").classList.contains(\"cargado\") && (cadenaAMontar.length === 0)){\r\n                        MySwal.fire({\r\n                            title: \"Oops...\",\r\n                            html: <p>Oye debes cargar la maquina </p>,\r\n                            icon: \"warning\"\r\n                        });\r\n                    }\r\n                    if (!document.getElementById(\"cargar\").classList.contains(\"cargado\") && (cadenaAMontar.length !== 0)) {\r\n                        //alert(\"si notas que la cinta ahora solo tiene 'a', debes cargar de nuevo\")\r\n                        MySwal.fire({\r\n                            title: \"Opps....\",\r\n                            html: \"Si notas que la cinta ahora solo tiene 'a', debes cargar la maquina de nuevo. \",\r\n                            icon: \"warning\"\r\n                       });\r\n\r\n                    }\r\n                    if(document.getElementById(\"iniciar\").classList.contains(\"corriendo\")){\r\n                        //alert(\"La simulacion esta corriendo no seas mamooon, deja que termine\")\r\n                        MySwal.fire({\r\n                            title: \"Opps....\",\r\n                            html: \"La simulacion esta corriendo, deja que termine. \",\r\n                            icon: \"warning\"\r\n                       });\r\n                    }\r\n                }\r\n            }\r\n            else{\r\n                if(recorrido.length === 0){\r\n                    //alert(\"No has cargado la maquina no puedes iniciar el proceso\")\r\n                    MySwal.fire({\r\n                        title: \"Opps....\",\r\n                        html: \"No has cargado la maquina no puedes iniciar el proceso. \",\r\n                        icon: \"warning\"\r\n                   });\r\n                }\r\n                else{\r\n                    console.log(\"iniciar:> \",recorrido);\r\n\r\n                    //obteniendo velocidad\r\n                    console.log(velocidad);\r\n                    let rapidez = obtenerVelocidad(velocidad)\r\n\r\n                    //desactiva cuando se le da click he inicia el proceso\r\n                    document.getElementById(\"iniciar\").classList.add(\"desactivado\");\r\n                    document.getElementById(\"iniciar\").classList.add(\"corriendo\");\r\n\r\n                    //desactivando botones de toggle y cargar\r\n                    document.getElementById(\"cargar\").classList.add(\"desactivado\");\r\n                    document.getElementById(\"palanca\").classList.add(\"desactivado\");\r\n\r\n                    var i = 0;\r\n                    var network = red();\r\n\r\n                    // console.log(\"cadena parcial\",cadenaParcial);\r\n                    \r\n                    var idInterval = setInterval(()=>{\r\n                        \r\n                        // let vec = cadenaParcial;\r\n                        //   console.log(\"dentro del interval\");\r\n                        if(i < recorrido.length){\r\n                            // console.log(\"dentro del if\");\r\n                            //resaltando estado\r\n                            network.setSelection({nodes:recorrido[i].resalta.nodo, edges:recorrido[i].resalta.enlace});\r\n                            setTimeout(()=>{\r\n                                network.setSelection({nodes:[4]});\r\n                            },rapidez-100)\r\n\r\n                            //cambiando lo que hay en el vector\r\n                            let parcial = construirNuevoVector(recorrido[i].indice,recorrido[i].reemplazaPor,cadenaAMontar);\r\n                            // for (let x = 0; x < vec.length; x++) {\r\n                            //     if(x === recorrido[i].indice){\r\n                            //         vec[x] = recorrido[i].reemplazaPor\r\n                            //     }\r\n                            // }\r\n                            \r\n                            console.log(\"cadenaParcial => \",parcial);\r\n                            // setCadenaParcial(parcial);\r\n                            establecerCadenaEnLaCinta(convertirEnVectorAux(parcial.join('')));\r\n                            // console.log(\"vectorParcial => \",vec);\r\n                            // console.log(\"cadenaCinta   => \",cadenaAMontar);\r\n                            console.log(\"intervalo     => \",i);\r\n\r\n                            //muevete\r\n                            document.getElementById(recorrido[i].clickEn).click();    \r\n\r\n                            i++;\r\n                        }\r\n                        else{\r\n                            // document.getElementById(\"iniciar\").classList.remove(\"desactivado\");\r\n                            document.getElementById(\"iniciar\").classList.remove(\"corriendo\");\r\n                            document.getElementById(\"cargar\").classList.remove(\"cargado\");\r\n\r\n                            //activando nuevamente botones cargar y toggle\r\n                            if(regex.test(document.getElementById(\"entrada\").value)){\r\n                                document.getElementById(\"cargar\").classList.remove(\"desactivado\");\r\n                            }\r\n                            document.getElementById(\"palanca\").classList.remove(\"desactivado\");\r\n\r\n                            //cuando termine queda en el ultimo estado\r\n                            network.setSelection({nodes:[3]})\r\n                            //alert(\"Proceso finalizaado\")\r\n                            MySwal.fire({\r\n                                title: \"Finalizado\",\r\n                                text: \"Proceso terminado con exito.\",\r\n                                icon: \"success\"\r\n                            });\r\n                            //para quitar el boton reiniciar que se haga automatico\r\n                            // establecerCadenaEnLaCinta(convertirEnVector(cadena));\r\n                            clearInterval(idInterval);\r\n                        }\r\n                    },rapidez);\r\n                }\r\n            }\r\n        }\r\n\r\n        // if(e.target.id.includes(\"pausar\")){\r\n        //     console.log(\"Clickaste => \",\"pausar\");\r\n        //     if(document.getElementById(\"pausar\").classList.contains(\"desactivado\") && !document.getElementById(\"cargar\").classList.contains(\"cargada\")){\r\n        //         //alert(\"Mientras la cadena de entrada este vacia o sea incorrecta, no puedes pausar\\nRecuerda cargar la maquina\");\r\n        //         MySwal.fire({\r\n        //             title: \"Error al pausar\",\r\n        //             html: <p>Mientras la cadena de entrada este vacia o sea incorrecta,<br></br>Recuerda cargar la maquina</p>,\r\n        //             footer: \"ERROR\",\r\n        //             icon: 'error',\r\n        //         });\r\n        //         //falta validar mas\r\n        //     }\r\n        // }\r\n\r\n        // if(e.target.id.includes(\"reIniciar\")){\r\n        //     console.log(\"Clickaste => \",\"reiniciar\");\r\n        //     if(document.getElementById(\"reIniciar\").classList.contains(\"desactivado\")){\r\n        //         //alert(\"Mientras la cadena de entrada este vacia o sea incorrecta, no puedes reiniciar\\nRecuerda cargar la maquina\");\r\n                \r\n        //         if(document.getElementById(\"cargar\").classList.contains(\"desactivado\")){    \r\n        //             MySwal.fire({\r\n        //                 title: \"Error al Reinicar\",\r\n        //                 html: <p>Mientras la cadena de entrada este vacia o sea incorrecta,<br></br>Recuerda cargar la maquina</p>,\r\n        //                 footer: \"ERROR\",\r\n        //                 icon: 'error'\r\n        //             });\r\n        //         }\r\n        //         //falta validar mas\r\n        //     }\r\n        //     else{\r\n        //         //jajajajaja\r\n        //         document.getElementById(\"reIniciar\").classList.add(\"puedeReiniciar\");\r\n        //         document.getElementById(\"iniciar\").click();\r\n        //         // setTimeout(()=>{\r\n        //         //     document.getElementById(\"reIniciar\").classList.remove(\"puedeReiniciar\");   \r\n        //         // },2000);\r\n        //     }\r\n        // }\r\n\r\n        if(e.target.id.includes(\"siguiente\")){\r\n            console.log(\"Clickaste => \",\"siguiente\");\r\n            if(document.getElementById(\"siguiente\").classList.contains(\"desactivado\")){\r\n                //alert(\"Mientras la cadena de entrada este vacia o sea incorrecta, no puedes seguir el proceso por pasos\\nRecuerda cargar la maquina\");\r\n                \r\n                if(document.getElementById(\"cargar\").classList.contains(\"desactivado\")){   \r\n                    MySwal.fire({\r\n                        title: \"Error\",\r\n                        html: <p>Recuerda cargar la maquina <br></br> y mientras la cadena de entrada este vacia o sea incorrecta, no puedes hacer el paso a paso.</p>,\r\n                        footer: \"ERROR\",\r\n                        icon: 'error',\r\n                    });\r\n                }\r\n                else{\r\n                    if(!document.getElementById(\"cargar\").classList.contains(\"cargado\") && (cadenaAMontar.length === 0)){\r\n                        //alert(\"oye por favor carga la maquina\")\r\n                        MySwal.fire({\r\n                            title: \"Opps...\",\r\n                            html: \"Oye debes cargar la maquina\",\r\n                            icon: \"warning\"\r\n                        });\r\n                    }\r\n                    if (!document.getElementById(\"cargar\").classList.contains(\"cargado\") && (cadenaAMontar.length !== 0)) {\r\n                       // alert(\"si notas que la cinta ahora solo tiene 'a', debes cargar de nuevo\")\r\n                       MySwal.fire({\r\n                            title: \"Opps....\",\r\n                            html: \"si notas que la cinta ahora solo tiene 'a', debes cargar la maquina de nuevo \",\r\n                            icon: \"warning\"\r\n                       });\r\n                    }\r\n                }\r\n\r\n            }\r\n            else{\r\n                if(recorrido.length === 0){\r\n                    //alert(\"No puedes iniciar el paso a paso sin antes cargar la maquina\");\r\n                    MySwal.fire({\r\n                        title: \"Opps....\",\r\n                        text: \"No puedes inicar el paso a paso sin antes cargar la maquina.\",\r\n                        icon: \"warning\"\r\n                    });\r\n                }\r\n                else{\r\n                    console.log(\"pasos:> \",recorrido);\r\n                    console.log(\"loongitud del recorrido\",recorrido.length);\r\n                    \r\n                    //desactivando botones de toggle y cargar\r\n                    document.getElementById(\"cargar\").classList.add(\"desactivado\");\r\n                    document.getElementById(\"palanca\").classList.add(\"desactivado\");\r\n                                        \r\n                    var network = red();\r\n                    if(j < recorrido.length){\r\n                        // console.log(\"dentro del if\");\r\n                        //resaltando estado\r\n                        network.setSelection({nodes:recorrido[j].resalta.nodo, edges:recorrido[j].resalta.enlace});\r\n                        setTimeout(()=>{\r\n                            network.setSelection({nodes:[4]});\r\n                        },400)\r\n                        setTimeout(()=>{\r\n                            network.setSelection({nodes:recorrido[j].resalta.nodo});\r\n                        },500)\r\n\r\n                        //cambiando lo que hay en el vector\r\n                        let parcial = construirNuevoVector(recorrido[j].indice,recorrido[j].reemplazaPor,cadenaAMontar);\r\n                        // for (let x = 0; x < vec.length; x++) {\r\n                        //     if(x === recorrido[i].indice){\r\n                        //         vec[x] = recorrido[i].reemplazaPor\r\n                        //     }\r\n                        // }\r\n                        \r\n                        console.log(\"cadenaParcial => \",parcial);\r\n                        // setCadenaParcial(parcial);\r\n                        establecerCadenaEnLaCinta(convertirEnVectorAux(parcial.join('')));\r\n                        // console.log(\"vectorParcial => \",vec);\r\n                        // console.log(\"cadenaCinta   => \",cadenaAMontar);\r\n                        console.log(\"intervalo     => \",j);\r\n\r\n\r\n                        //muevete\r\n                        document.getElementById(recorrido[j].clickEn).click();\r\n\r\n                        setJ(j+1);\r\n                    }\r\n                    else{\r\n                        document.getElementById(\"siguiente\").classList.add(\"desactivado\");\r\n                        document.getElementById(\"cargar\").classList.remove(\"cargado\");\r\n\r\n                        //activando nuevamente botones cargar y toggle\r\n                        if(regex.test(document.getElementById(\"entrada\").value)){\r\n                            document.getElementById(\"cargar\").classList.remove(\"desactivado\");\r\n                        }\r\n                        document.getElementById(\"palanca\").classList.remove(\"desactivado\");\r\n\r\n                        //aqui termina el recorrido ps\r\n                        //alert(\"aqui termina el recorrido paso a paso\");\r\n                        MySwal.fire({\r\n                            title: \"Finalizado\",\r\n                            text: \"Proceso terminado con exito.\",\r\n                            icon: \"success\"\r\n                        });\r\n                        setJ(0);\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const handleClickPasos = e => {\r\n        if(!document.getElementById(\"palanca\").classList.contains(\"desactivado\")){\r\n            setPasos(!pasos)\r\n            // console.log(pasos);\r\n        }\r\n        else{\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    const muestraBotones = () => {\r\n        if(pasos){\r\n            return(\r\n                <div className=\"pack-botones-pasos\">\r\n                    <p>Para que la ejecución avance haga click en el siguiente boton:</p>\r\n                    <a id=\"siguiente\" name=\"siguiente\" onClick={handleClick} className=\"siguiente desactivado\">\r\n                        <p id=\"t_siguiente\" >Siguiente</p>\r\n                        <img id=\"i_siguiente\" src=\"https://img.icons8.com/material-sharp/48/000000/circled-chevron-right.png\"/>\r\n                    </a>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return(\r\n                <div className=\"pack-botones-sin_pasos\">\r\n                    <p className=\"titulo__slider\">Seleciona aqui la velocidad de ejecución</p>\r\n                    <div className=\"contenedor_deslizable\">\r\n                        <input onChange={handleChange} name=\"deslizante\" className=\"deslizante\" type=\"range\" min=\"0\" max=\"100\" step=\"10\"/>\r\n                        <p id=\"value_deslizable\" className=\"value_deslizable\">{velocidad}%</p>\r\n                    </div>\r\n                    <div className=\"contenedor__botones\">\r\n                        <a id=\"iniciar\" name=\"iniciar\" onClick={handleClick} className=\"iniciar desactivado\">\r\n                            <p id=\"t_iniciar\" >Iniciar</p>\r\n                            <img id=\"i_iniciar\" src=\"https://img.icons8.com/ios-filled/50/000000/chevron-right.png\"/>\r\n                        </a>\r\n                        {/* <a id=\"pausar\" name=\"pausar\" onClick={handleClick} className=\"pausar\">\r\n                            <p id=\"t_pausar\" >Pausar</p>\r\n                            <img id=\"i_pausar\" src=\"https://img.icons8.com/android/48/000000/pause.png\"/>\r\n                        </a> */}\r\n                        {/* <a id=\"reIniciar\" name=\"reiniciar\" onClick={handleClick} className=\"reiniciar\">\r\n                            <p id=\"t_reIniciar\" >Reiniciar</p>\r\n                            <img id=\"i_reIniciar\" src=\"https://img.icons8.com/metro/52/000000/restart.png\"/>\r\n                        </a> */}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const retorna = () => (\r\n        <form>\r\n            <p>Configuración y parametrización</p>\r\n            <div className=\"wrapper__input\">\r\n                <label className=\"label-cadena\" htmlFor=\"cadena\">Ingresa aqui la cadena a analizar<br></br> (Solo se admiten minusculas).</label>\r\n                <div id=\"cadena\" className=\"input\">\r\n                    <input id=\"entrada\" onChange={handleChange} type=\"text\" autoComplete=\"off\" name=\"cadena\" placeholder=\"aabbb, min: 2, max: 18\" />\r\n                    <i id=\"icono\" className=\"fas fa-times-circle\"></i>\r\n                    <p className=\"sms activo\">{sms}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"wrapper__input\">\r\n                <p>¿DESEAS HACER EL PASO A PASO MANUAL?</p>\r\n                <input className=\"toggle-button\" onClick={handleClickPasos} type=\"checkbox\" name=\"porPasos\" id=\"porPasos\"/>\r\n                <label id=\"toggleState\" id=\"palanca\" className=\"label-custom\" htmlFor=\"porPasos\"></label>\r\n                <a id=\"cargar\" name=\"cargar\" onClick={handleClick} className=\"cargar\">\r\n                    <p id=\"t_cargar\" >Cargar Maquina</p>\r\n                    <img id=\"i_cargar\" src=\"https://img.icons8.com/metro/52/000000/submit-progress.png\"/>\r\n                </a>\r\n            </div>\r\n            {\r\n                muestraBotones()\r\n            }\r\n        </form>\r\n    );\r\n    return retorna();\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    cadenaAMontar: state.cadenaAMontar,\r\n    recorrido: state.recorrido\r\n})\r\n\r\nconst mapDispathcToProps = dispatch => ({\r\n\r\n    establecerCadenaEnLaCinta(cadena){\r\n        dispatch({\r\n            type: 'ESTABLECER_CADENA',\r\n            cadena\r\n        })\r\n    },\r\n\r\n    establecerRecorrido(vector){\r\n        dispatch({\r\n            type: 'ESTABLECER_RECORRIDO',\r\n            vector\r\n        })\r\n    }\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispathcToProps)(Settings);","C:\\Users\\LuisRG17\\Desktop\\U\\Compiladores\\maquinaTuring\\src\\library\\funciones.js",[],{"ruleId":"30","severity":1,"message":"31","line":10,"column":5,"nodeType":"32","messageId":"33","endLine":25,"endColumn":6},{"ruleId":"34","severity":1,"message":"35","line":40,"column":7,"nodeType":"36","endLine":40,"endColumn":14,"suggestions":"37"},{"ruleId":"34","severity":1,"message":"38","line":103,"column":7,"nodeType":"36","endLine":103,"endColumn":14,"suggestions":"39"},{"ruleId":"40","severity":1,"message":"41","line":439,"column":25,"nodeType":"42","messageId":"43","endLine":439,"endColumn":32},{"ruleId":"44","severity":1,"message":"45","line":513,"column":21,"nodeType":"46","endLine":513,"endColumn":112},{"ruleId":"47","severity":1,"message":"48","line":515,"column":25,"nodeType":"46","endLine":515,"endColumn":128},{"ruleId":"44","severity":1,"message":"45","line":529,"column":25,"nodeType":"46","endLine":529,"endColumn":110},{"ruleId":"47","severity":1,"message":"48","line":531,"column":29,"nodeType":"46","endLine":531,"endColumn":118},{"ruleId":"49","severity":1,"message":"50","line":561,"column":41,"nodeType":"51","endLine":561,"endColumn":53},{"ruleId":"44","severity":1,"message":"45","line":562,"column":17,"nodeType":"46","endLine":562,"endColumn":87},{"ruleId":"47","severity":1,"message":"48","line":564,"column":21,"nodeType":"46","endLine":564,"endColumn":106},"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cadenaAMontar'. Either include it or remove the dependency array.","ArrayExpression",["52"],"React Hook useEffect has a missing dependency: 'regex'. Either include it or remove the dependency array.",["53"],"no-redeclare","'network' is already defined.","Identifier","redeclared","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",{"desc":"54","fix":"55"},{"desc":"56","fix":"57"},"Update the dependencies array to be: [cadenaAMontar, pasos]",{"range":"58","text":"59"},"Update the dependencies array to be: [pasos, regex]",{"range":"60","text":"61"},[1590,1597],"[cadenaAMontar, pasos]",[5259,5266],"[pasos, regex]"]