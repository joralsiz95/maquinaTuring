{"version":3,"sources":["imagenes/web-hook.svg","components/navegacion.jsx","components/footer.jsx","library/vis.js","components/diagramas.jsx","library/funciones.js","components/settings.jsx","components/cuerpo.jsx","store.js","App.js","index.js"],"names":["MySwal","withReactContent","Swal","Navegacion","className","src","imagen","alt","id","name","onClick","e","target","includes","fire","title","html","href","Footer","network","red","connect","state","cadenaMontar","cadenaAMontar","dispatch","contenedor_grafo","useRef","vector","i","push","useEffect","Glide","type","startAt","perView","focusAt","gap","animationDuration","peek","mount","console","log","current","contenedor","data","nodes","DataSet","label","font","size","shape","color","background","border","highlight","physics","x","y","borderWidthSelected","edges","from","to","arrows","align","selfReference","selectionWidth","shadow","enabled","angle","scaleFactor","dashes","Network","interaction","dragView","selectConnectedEdges","crearRed","ref","data-glide-el","length","map","elem","mostrarElementosEnLaCinta","data-glide-dir","convertirEnVector","cadena","unshift","filter","convertirEnVectorAux","cadenaProcesada","array","recorrido","establecerCadenaEnLaCinta","establecerRecorrido","useState","setCadena","pasos","setPasos","velocidad","setVelocidad","sms","setSms","j","setJ","regex","document","getElementById","classList","contains","remove","test","value","add","handleChange","construirNuevoVector","index","element","vectorRetornar","handleClick","footer","icon","entrada","vectorRetorno","objetoIndicaciones","indice","lee","reemplazaPor","resalta","nodo","enlace","clickEn","generarRecorrido","rapidez","porcentaje","relaciones","retorno","obtenerVelocidad","idInterval","setInterval","setSelection","setTimeout","parcial","join","click","text","clearInterval","handleClickPasos","preventDefault","htmlFor","onChange","autoComplete","placeholder","min","max","step","retorna","Cuerpo","initialState","createStore","action","App","store","ReactDOM","render"],"mappings":"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","file":"static/js/main.ee142d1e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/web-hook.0ab35089.svg\";","import React from 'react';\r\nimport imagen from '../imagenes/web-hook.svg';\r\n\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Navegacion = () => {\r\n\r\n    const handleClick = e => {\r\n        \r\n        if(e.target.id.includes(\"instrucciones\")){\r\n        \r\n            MySwal.fire({\r\n            \r\n                title: \"Bienvenido\",\r\n                html: <p> <strong>Te damos la bienvenida a este simulador de la Maquina de Turing</strong> <br/><br/>\r\n            \r\n                Este simulador tiene un caso de uso especifico:<br/><br/>\r\n                ➤ Te permitirá ingresar una cadena con combinaciones cualesquiera de a y b en minúscula. <br/><br/>\r\n                ➤ Luego debes cargar la máquina para la simulación (La cadena que escribiste se ubicara en la cinta). <br/><br/>\r\n                ➤ Posterior a ello tendrás que seleccionar el modo en que deseas ver el proceso, puedes hacerlo paso a paso \r\n                de forma manual o puedes dejar que la simulación sea automática, en caso de que optes por esta última opción \r\n                tendrás que establecer una velocidad de simulación en el slider, la máxima son 300 milisegundos y la mínima son 1000.<br/><br/> \r\n                ➤ Puedes cambiar de modo automático a manual y viceversa. <br/><br/>\r\n                ➤ Al dar click en los botones de \"iniciar\" y \"siguiente\" de cada modo podrás notar que la simulación convierte la cadena de \r\n                <strong> a</strong>es y <strong>b</strong>es que escribiste en una cadena que solo contiene <strong>a</strong>es a medida\r\n                que ocurre magia en el grafo y en la cinta.<br/><br/>\r\n    \r\n                ⏩ Puedes ver la asignación formal <a href=\"https://docs.google.com/document/d/1bIvmPI2RZjalk3Hjvaf1gIRp8JKRpL7LtfM8W0IQ5Po/edit\" target=\"_black\" ><strong>aquí</strong></a> ⏪ <br/><br/>\r\n                ⏩ y el repositorio de este proyecto <a href=\"https://github.com/joralsiz95/maquinaTuring\" target=\"_black\" ><strong>aquí</strong></a> ⏪ <br/><br/>\r\n    \r\n                <strong>✌ DISFRUTALO ✌</strong> \r\n                </p>\r\n                \r\n            });\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"navegacion\">\r\n            <div className=\"navegacion__izquierda\">\r\n                <img src={imagen} alt=\"Logo\"/>\r\n                <h2><span>M</span>AQUINA DE <span>T</span>URING</h2>\r\n            </div>\r\n            <div className=\"navegacion__derecha\">\r\n                <h2> <span>U</span>nimagdalena <span>2</span>0<span>2</span>0</h2>\r\n                <a id=\"instrucciones\" name=\"instrucciones\" onClick={handleClick} className=\"instrucciones\">\r\n                    <p id=\"t_instrucciones\" >¿ Que hago ?</p>\r\n                    <img id=\"i_instrucciones\" src=\"https://img.icons8.com/material-rounded/60/000000/ask-question.png\"/>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navegacion;","import React from 'react';\r\n\r\nconst Footer = () => (\r\n    <div className=\"footer\">\r\n        <div className=\"footer__left\">\r\n            <h2> <span className=\"span_2\">T</span>aller <span className=\"span_2\">m</span>áquina de <span className=\"span_2\">T</span>uring</h2>\r\n            <p>Objetivo: Implementar el modelo de Turing para transformar una cadena de combinaciones \"a\" y \"b\" en solo \"a\".</p>\r\n            <p>Misión: Construir un programa escrito en JavaScript utilice el automata universal, para resolver el problema establecido.</p>\r\n            <p>Compiladores</p>\r\n            <p>Universidad del magdalena</p>\r\n            <p>\r\n                © 2020 Maquina de Turing, Inc.\r\n                Todos los derechos reservados\r\n            </p>\r\n        </div>\r\n        <div className=\"footer__right\">\r\n            <div className=\"footer__right__autores\">\r\n                <h3><span className=\"span_2\">C</span>readores</h3>\r\n                <p>Andres Felipe Brieva Pinedo</p>\r\n                <p>Jorge Alberto Silva Zambrano</p>\r\n                <p>Sebastian Troncoso Correa</p>\r\n                <p>Luis Eduardo Gamez Maldonado</p>\r\n            </div>\r\n            <div className=\"footer__right__profesor\">\r\n                <h3><span className=\"span_2\">P</span>rofesor</h3>\r\n                <p>Daniel Gonzales Polo</p>\r\n            </div>\r\n        </div>\r\n    </div> \r\n);\r\n\r\nexport default Footer;","import { Network } from 'vis-network';\r\nimport { DataSet } from 'vis-data';\r\n\r\nvar network = null;\r\n\r\nexport function crearRed(contenedor){\r\n\r\n    //creando el arreglo de nodos\r\n    var nodes = new DataSet([\r\n        { id: 1, label: \"    𝙌₁    \",font:{size: 18}, shape: \"circle\", color: {background: \"#1FA5FF\", border: \"#1FA5FF\", highlight: { background: \"yellow\", border: \"rgb(34, 236, 14)\" }}, physics:false, x: 20, y:10 /*,fixed: { x:true, y:true}*/, borderWidthSelected: 4 },\r\n        { id: 2, label: \"    𝙌₂    \", font:{size: 18}, shape: \"circle\", color: {background: \"#1FA5FF\", border: \"#1FA5FF\", highlight: { background: \"yellow\", border: \"rgb(34, 236, 14)\" }}, physics:false, x: 180, y:150, borderWidthSelected: 4 },\r\n        { id: 3, label: \"    𝙌₃    \",font:{size: 18}, shape: \"circle\", /*borderWidth: 5,*/ color: {background: \"#1FA5FF\", border: \"#1FA5FF\", highlight: { background: \"rgb(34, 236, 14)\", border: \"red\" }}, physics:false, x: 350, y:10, borderWidthSelected: 4 },\r\n        // { id: 4, label: \"Node 4\", shape: \"circle\", color: {background: \"red\", border: \"black\", highlight: { background: \"yellow\", border: \"red\" }, borderWidthSelected: 3}, physics:false, x: 500, y:140 },\r\n        { id: 4, shape: \"dot\", physics:false, x: 50, y:60, color: {background: \"transparent\", border: \"transparent\", highlight: { background: \"transparent\", border: \"transparent\" } } }\r\n    ]);\r\n\r\n\r\n    // creando arreglo de conexiones\r\n    var edges = new DataSet([\r\n        { id:11, from: 1, to: 1, arrows: \"to\", label: \"𝙖 ➤ 𝙖 , 𝙍\", color: {color: \"#1FA5FF\", highlight:\"rgb(34, 236, 14)\"}, font: { align: \"top\" }, selfReference:{size: 40}, selectionWidth: 2.3, shadow:{ enabled: true, color: 'rgba(0,0,0,.4)', size:5, x:2, y:2 } },\r\n        { id:112, from: 1, to: 1, arrows: \"to\", label: \"𝙗 ➤ 𝙖 , 𝙍\", color: {color: \"#1FA5FF\", highlight:\"rgb(34, 236, 14)\"}, font: { align: \"top\" }, selfReference:{size: 40,angle:180}, selectionWidth: 2.3, shadow:{ enabled: true, color: 'rgba(0,0,0,.4)', size:5, x:2, y:2 } },\r\n        { id:12, from: 1, to: 2, arrows: { to: { enabled: true ,scaleFactor: 1.2, type: \"arrow\" } }, color: {color: \"#1FA5FF\", highlight:\"rgb(34, 236, 14)\"}, label: \"#̅  ➤ #̅  , 𝙇\", font: { align: \"top\" }, selectionWidth: 2.3, shadow:{ enabled: true, color: 'rgba(0,0,0,.4)', size:5, x:2, y:2 } },\r\n        { id:22, from: 2, to: 2, arrows: \"to\", label: \"𝙖 ➤ 𝙖 , 𝙇\", color: {color: \"#1FA5FF\", highlight:\"rgb(34, 236, 14)\"}, font: { align: \"top\" }, selfReference:{size: 40,angle:200}, selectionWidth: 2.3, shadow:{ enabled: true, color: 'rgba(0,0,0,.4)', size:5, x:2, y:2 } },\r\n        { id:23, from: 2, to: 3, arrows: \"to\", label: \"#̅  ➤ #̅  , 𝙍\",dashes: true, color: {color: \"#1FA5FF\", highlight:\"red\"}, font: { align: \"top\" }, selectionWidth: 2.3, shadow:{ enabled: true, color: 'rgba(0,0,0,.4)', size:5, x:2, y:2 } },\r\n        // { id:33, from: 3, to: 3, arrows: \"to\", label: \"con_4\", font: { align: \"top\" }, selfReference:{size: 30}, selectionWidth: 2.3, shadow:{ enabled: true, color: 'rgba(0,0,0,.4)', size:5, x:2, y:2 } },\r\n        \r\n        \r\n        // { id:34, from: 3, to: 4, arrows: \"to\", dashes: true, color: {color: \"black\", highlight:\"red\"}, label: \"con_5\", font: { align: \"top\" }, selectionWidth: 2.3, shadow:{ enabled: true, color: 'rgba(0,0,0,.4)', size:5, x:2, y:2 }}\r\n    ]);\r\n\r\n    var data = {\r\n        nodes: nodes,\r\n        edges: edges,\r\n    };\r\n    \r\n    var options = {\r\n        interaction: {\r\n            // hover: true\r\n            dragView: true,\r\n            selectConnectedEdges: false\r\n        }\r\n    };\r\n    \r\n    network = new Network(contenedor,data,options);    \r\n\r\n}\r\n\r\nexport function red(){\r\n    return network;    \r\n}","import React, { Fragment, useRef, useEffect } from 'react';\r\nimport { crearRed, red } from '../library/vis';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Glide from '@glidejs/glide';\r\n\r\nconst Diagramas = ({ cadenaMontar }) => {\r\n    \r\n    const contenedor_grafo = useRef(null);\r\n    //vector base\r\n    var vector = []; for (let i = 0; i < 40; i++) vector.push(\"x\");\r\n\r\n    //ejemplo de la cinta\r\n    useEffect(()=>{\r\n\r\n      var glide = new Glide('.glide',{\r\n        type: \"slider\",\r\n        startAt: 10,\r\n        perView: 11,\r\n        focusAt: \"center\",\r\n        gap: 5,\r\n        // animationTimingFunc: \"bounce\",\r\n        animationDuration: 100,\r\n        peek: 20,\r\n        // keyboard: false\r\n      })\r\n      // glide.disable(); //suspende interaccion\r\n      glide.mount();\r\n\r\n    },[])\r\n\r\n    //ejemplo del grafo\r\n    //prueba de funcionamiento del grafo\r\n    useEffect(()=>{\r\n        console.log(contenedor_grafo.current);\r\n        //crea el grafo\r\n        crearRed(contenedor_grafo.current);\r\n\r\n      \r\n    },[])\r\n\r\n    useEffect(()=>{\r\n      console.log(\"Actualizo cadena en la cinta\");\r\n      console.log(\"Effect diagramas => \",cadenaMontar);\r\n    },[cadenaMontar])\r\n\r\n    const mostrarElementosEnLaCinta = () => { \r\n\r\n      if(cadenaMontar.length === 0){\r\n        return vector.map((elem,i)=>(\r\n          <li className=\"glide__slide\" key={i} ></li>\r\n        ));\r\n      }\r\n      else{\r\n        var aux = 9;\r\n        return vector.map((elem,i)=>{\r\n          if(i === 9){\r\n            return <li className=\"glide__slide\" key={i} >{cadenaMontar[0]}</li>\r\n          }\r\n          if(i>=10 && i <= 10+(cadenaMontar.length-2)) {\r\n            return <li className=\"glide__slide\" key={i} >{cadenaMontar[i-aux]}</li>\r\n          }\r\n          else return <li className=\"glide__slide\" key={i} ></li>\r\n        }); \r\n      }\r\n      \r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n            {/* Contenedor del grafo */}\r\n            <div className=\"wrapper__grafo\">\r\n                <div id=\"red\" ref={contenedor_grafo}></div>\r\n            </div> \r\n            \r\n            {/* Contenedor de la cinta */}\r\n            <div className=\"glide\">\r\n                <h3>Representación de la cinta</h3>\r\n                <div className=\"glide__track\" data-glide-el=\"track\">\r\n                    <ul className=\"glide__slides\">\r\n                        {\r\n                          mostrarElementosEnLaCinta()\r\n                        }\r\n                    </ul>\r\n                    <div className=\"señalador\">\r\n                    {/* <img src=\"https://img.icons8.com/fluent/48/000000/sort-up.png\"/> */}\r\n                      <p>Una vez cargues la maquina, aparecera la cadena en esta cinta ...!</p>\r\n                    </div>\r\n                </div>\r\n                <div data-glide-el=\"controls\">\r\n                  <button id=\"btn__prev\" className=\"btns\" data-glide-dir=\"<\">prev</button>\r\n                  <button id=\"btn__next\" className=\"btns\" data-glide-dir=\">\">next</button>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  cadenaMontar: state.cadenaAMontar\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Diagramas);\r\n\r\n","export const convertirEnVector = (cadena) => {\r\n    var vector = [];\r\n    for (let i = 0; i < cadena.length; i++) {\r\n        vector[i] = cadena[i];   \r\n    }\r\n    vector.unshift(\"#\");\r\n    vector.push(\"#\");\r\n    // el vecot queda ['#',...,'#']\r\n    return vector.filter(e => e !== ' ');\r\n}\r\n\r\nexport const convertirEnVectorAux = (cadena) => {\r\n    var vector = [];\r\n    for (let i = 0; i < cadena.length; i++) {\r\n        vector[i] = cadena[i];   \r\n    }\r\n    // el vecot queda ['#',...,'#']\r\n    return vector.filter(e => e !== ' ');\r\n}\r\n\r\nexport const generarRecorrido = (entrada) => {\r\n\r\n    let vector = entrada;\r\n    let vectorRetorno = [];\r\n\r\n    for (let i = 1; i < vector.length; i++) {\r\n\r\n        let objetoIndicaciones = {\r\n            indice: 0,\r\n            lee: \"\",\r\n            reemplazaPor: \"a\",\r\n            resalta: {\r\n                nodo: [],\r\n                enlace: []\r\n            },\r\n            clickEn: \"\"\r\n        }\r\n\r\n        if(vector[i] === \"a\"){\r\n                \r\n            objetoIndicaciones.indice = i;\r\n            objetoIndicaciones.lee = vector[i];\r\n            // objetoIndicaciones.reemplazaPor = \"a\";\r\n            objetoIndicaciones.resalta.nodo = [1];\r\n            objetoIndicaciones.resalta.enlace = [11];\r\n            objetoIndicaciones.clickEn = \"btn__next\"\r\n\r\n        }\r\n        if(vector[i] === \"b\"){\r\n            \r\n            objetoIndicaciones.indice = i;\r\n            objetoIndicaciones.lee = vector[i];\r\n            // objetoIndicaciones.reemplazaPor = \"a\";\r\n            objetoIndicaciones.resalta.nodo = [1];\r\n            objetoIndicaciones.resalta.enlace = [112];\r\n            objetoIndicaciones.clickEn = \"btn__next\"\r\n            vector[i] = \"a\"\r\n        }\r\n\r\n        if(vector[i] === \"#\"){\r\n            \r\n            objetoIndicaciones.indice = i;\r\n            objetoIndicaciones.lee = vector[i];\r\n            objetoIndicaciones.reemplazaPor = \"#\";\r\n            objetoIndicaciones.resalta.nodo = [2];\r\n            objetoIndicaciones.resalta.enlace = [12];\r\n            objetoIndicaciones.clickEn = \"btn__prev\"\r\n\r\n        }\r\n        \r\n        vectorRetorno.push(objetoIndicaciones)\r\n    }\r\n\r\n    for (let i = vector.length-2 ; i >= 0 ; i--) {\r\n        // console.log(vector.length);\r\n        // console.log(vector[i],\" => \",i);\r\n        let objetoIndicaciones = {\r\n            indice: 0,\r\n            lee: \"\",\r\n            reemplazaPor: \"a\",\r\n            resalta: {\r\n                nodo: [],\r\n                enlace: []\r\n            },\r\n            clickEn: \"\"\r\n        }\r\n\r\n        if(vector[i] === \"a\"){\r\n                \r\n            objetoIndicaciones.indice = i;\r\n            objetoIndicaciones.lee = vector[i];\r\n            // objetoIndicaciones.reemplazaPor = \"a\";\r\n            objetoIndicaciones.resalta.nodo = [2];\r\n            objetoIndicaciones.resalta.enlace = [22];\r\n            objetoIndicaciones.clickEn = \"btn__prev\"\r\n\r\n        }\r\n        \r\n        if(vector[i] === \"#\"){\r\n            \r\n            objetoIndicaciones.indice = i;\r\n            objetoIndicaciones.lee = vector[i];\r\n            objetoIndicaciones.reemplazaPor = \"#\";\r\n            objetoIndicaciones.resalta.nodo = [3];\r\n            objetoIndicaciones.resalta.enlace = [23];\r\n            objetoIndicaciones.clickEn = \"btn__next\"\r\n\r\n        }\r\n\r\n        vectorRetorno.push(objetoIndicaciones)\r\n    }\r\n\r\n    return vectorRetorno;\r\n}\r\n\r\n\r\n\r\nexport const cadenaProcesada = (array) => {\r\n    // console.log(array);\r\n    let procesado = true;\r\n    for (let i = 1; i < array.length-1; i++) {\r\n        // console.log(array[i]);\r\n        if(array[i] !== \"a\"){\r\n            return false;\r\n        }\r\n    }\r\n    return procesado;\r\n}\r\n\r\nexport const obtenerVelocidad = (porcentaje) => {\r\n    console.log(\"Que ha pasado: \",porcentaje);\r\n    let relaciones = [\r\n        {\r\n            porcentaje: 100,\r\n            velocidad: 300\r\n        },\r\n        {\r\n            porcentaje: 90,\r\n            velocidad: 500\r\n        },\r\n        {\r\n            porcentaje: 80,\r\n            velocidad: 700\r\n        },\r\n        {\r\n            porcentaje: 70,\r\n            velocidad: 800\r\n        },\r\n        {\r\n            porcentaje: 60,\r\n            velocidad: 900\r\n        },\r\n        {\r\n            porcentaje: 50,\r\n            velocidad: 1000\r\n        },\r\n        {\r\n            porcentaje: 40,\r\n            velocidad: 1100\r\n        },\r\n        {\r\n            porcentaje: 30,\r\n            velocidad: 1400\r\n        },\r\n        {\r\n            porcentaje: 20,\r\n            velocidad: 1600\r\n        },\r\n        {\r\n            porcentaje: 10,\r\n            velocidad: 1800\r\n        },\r\n        {\r\n            porcentaje: 0,\r\n            velocidad: 2000\r\n        }\r\n    ]\r\n\r\n    let retorno = 300;\r\n    for (let i = 0; i < relaciones.length; i++) {\r\n        if(relaciones[i].porcentaje == porcentaje){\r\n            retorno = relaciones[i].velocidad;\r\n        }\r\n    }\r\n\r\n    return retorno;\r\n}","import React, { useState, useEffect} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { convertirEnVector, generarRecorrido, convertirEnVectorAux, cadenaProcesada, obtenerVelocidad } from '../library/funciones';\r\nimport { red } from '../library/vis';\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Settings = ({ cadenaAMontar,  recorrido, establecerCadenaEnLaCinta, establecerRecorrido }) => {\r\n    \r\n    const [ cadena, setCadena ] = useState('');\r\n    const [ pasos, setPasos ] = useState(false);\r\n    const [ velocidad, setVelocidad ] = useState(50);\r\n    const [ sms, setSms ] = useState('Solo se aceptan a y b(minusculas).');\r\n    const [ j, setJ ] = useState(0);\r\n    const regex = /^[a-b]{2,18}$/;\r\n\r\n\r\n    //contador del paso a paso\r\n\r\n    \r\n\r\n    useEffect(()=>{\r\n        // console.log(cadenaProcesada([\"#\",\"a\",\"b\",\"b\",\"b\",\"#\"]));\r\n        if(pasos){\r\n            if(document.getElementById(\"cargar\").classList.contains(\"cargado\") && !cadenaProcesada(cadenaAMontar)){\r\n                document.getElementById(\"siguiente\").classList.remove(\"desactivado\")\r\n            }\r\n        }\r\n             \r\n        if(!pasos){\r\n            if(document.getElementById(\"cargar\").classList.contains(\"cargado\") && !cadenaProcesada(cadenaAMontar)){\r\n                document.getElementById(\"iniciar\").classList.remove(\"desactivado\")\r\n            }\r\n        }\r\n         \r\n    },[pasos]);\r\n\r\n    useEffect(()=>{\r\n        console.log(\"entro en el effect de toggle\");\r\n        if(!pasos){\r\n            if(regex.test(document.getElementById(\"entrada\").value)){\r\n                document.getElementById(\"cadena\").classList.add(\"bien\");\r\n                document.getElementById(\"cadena\").classList.remove(\"mal\");\r\n                document.getElementById(\"icono\").classList.add(\"fa-check-circle\");\r\n                document.getElementById(\"icono\").classList.remove(\"fa-times-circle\");               \r\n                document.getElementById(\"cargar\").classList.remove(\"desactivado\");\r\n                setSms(\"OK Puedo trabajar con esta cadena\");\r\n                setCadena(document.getElementById(\"entrada\").value);\r\n            }\r\n            else{\r\n                document.getElementById(\"cadena\").classList.add(\"mal\");\r\n                document.getElementById(\"cadena\").classList.remove(\"bien\");\r\n                document.getElementById(\"icono\").classList.remove(\"fa-check-circle\");\r\n                document.getElementById(\"icono\").classList.add(\"fa-times-circle\");\r\n                document.getElementById(\"cargar\").classList.add(\"desactivado\");\r\n                setSms(\"Esta cadena no es correcta...!\");\r\n            }\r\n        }\r\n        else{\r\n            if(regex.test(document.getElementById(\"entrada\").value)){\r\n                document.getElementById(\"cadena\").classList.add(\"bien\");\r\n                document.getElementById(\"cadena\").classList.remove(\"mal\");\r\n                document.getElementById(\"icono\").classList.add(\"fa-check-circle\");\r\n                document.getElementById(\"icono\").classList.remove(\"fa-times-circle\");\r\n                document.getElementById(\"cargar\").classList.remove(\"desactivado\");\r\n                setSms(\"OK Puedo trabajar con esta cadena\");\r\n                setCadena(document.getElementById(\"entrada\").value);\r\n            }\r\n            else{\r\n                document.getElementById(\"cadena\").classList.add(\"mal\");\r\n                document.getElementById(\"cadena\").classList.remove(\"bien\");\r\n                document.getElementById(\"icono\").classList.remove(\"fa-check-circle\");\r\n                document.getElementById(\"icono\").classList.add(\"fa-times-circle\");\r\n                document.getElementById(\"cargar\").classList.add(\"desactivado\");\r\n                setSms(\"Esta cadena no es correcta...!\");\r\n            }\r\n        }\r\n\r\n    },[pasos])\r\n\r\n    useEffect(()=>{document.getElementById(\"cadena\").classList.remove(\"mal\")},[]);\r\n   const handleChange = e => {\r\n        console.log(e.target.name,\" => \",e.target.value);        \r\n        if(e.target.name === \"deslizante\") setVelocidad(e.target.value);        \r\n        if(e.target.name === \"cadena\"){\r\n            if(!pasos){\r\n                if(regex.test(e.target.value)){\r\n                    document.getElementById(\"cadena\").classList.add(\"bien\");\r\n                    document.getElementById(\"cadena\").classList.remove(\"mal\");\r\n                    document.getElementById(\"icono\").classList.add(\"fa-check-circle\");\r\n                    document.getElementById(\"icono\").classList.remove(\"fa-times-circle\");\r\n                    document.getElementById(\"cargar\").classList.remove(\"desactivado\");\r\n                    setSms(\"OK Puedo trabajar con esta cadena\");\r\n                    setCadena(e.target.value);\r\n                }\r\n                else{\r\n                    document.getElementById(\"cadena\").classList.add(\"mal\");\r\n                    document.getElementById(\"cadena\").classList.remove(\"bien\");\r\n                    document.getElementById(\"icono\").classList.remove(\"fa-check-circle\");\r\n                    document.getElementById(\"icono\").classList.add(\"fa-times-circle\");\r\n                    document.getElementById(\"cargar\").classList.add(\"desactivado\");\r\n                    setSms(\"Esta cadena no es correcta...!\");\r\n                }\r\n            }\r\n            else{\r\n                if(regex.test(e.target.value)){\r\n                    document.getElementById(\"cadena\").classList.add(\"bien\");\r\n                    document.getElementById(\"cadena\").classList.remove(\"mal\");\r\n                    document.getElementById(\"icono\").classList.add(\"fa-check-circle\");\r\n                    document.getElementById(\"icono\").classList.remove(\"fa-times-circle\");\r\n                    document.getElementById(\"cargar\").classList.remove(\"desactivado\");\r\n                    setSms(\"OK Puedo trabajar con esta cadena\");\r\n                    setCadena(e.target.value);\r\n                }\r\n                else{\r\n                    document.getElementById(\"cadena\").classList.add(\"mal\");\r\n                    document.getElementById(\"cadena\").classList.remove(\"bien\");\r\n                    document.getElementById(\"icono\").classList.remove(\"fa-check-circle\");\r\n                    document.getElementById(\"icono\").classList.add(\"fa-times-circle\");\r\n                    document.getElementById(\"cargar\").classList.add(\"desactivado\");\r\n                    setSms(\"Esta cadena no es correcta...!\");\r\n                }\r\n            }\r\n        } \r\n    }\r\n\r\n    const construirNuevoVector = (index,element,vector) => {\r\n        let vectorRetornar = vector;\r\n        for (let x = 0; x < vectorRetornar.length; x++) {\r\n            if(x === index){\r\n                vectorRetornar[x] = element\r\n            }\r\n        }\r\n        return vectorRetornar;\r\n    }\r\n\r\n    const handleClick = e => {\r\n\r\n        if(e.target.id.includes(\"cargar\")){\r\n            console.log(\"Clickaste => \",\"cargar\");\r\n            if(document.getElementById(\"cargar\").classList.contains(\"desactivado\")){\r\n               MySwal.fire({\r\n                title: \"Error al cargar la maquina\",\r\n                html: <p>No se puede cargar la máquina<br/>\r\n                        Esto puede estar pasando por una de dos razones:<br/><br/>\r\n                        1.) Mientras la cadena de entrada este vacia o sea incorrecta.<br/><br/>\r\n                        2.) Empezaste un proceso: si sea manual debes terminarlo y si es automático espera a que termine.\r\n                      </p>,\r\n                footer: \"ERROR\",\r\n                icon: 'error',\r\n              });\r\n            }\r\n            else{\r\n                //ejecuta la funcion que pone los datos en la cinta\r\n                establecerCadenaEnLaCinta(convertirEnVector(cadena));\r\n                establecerRecorrido(generarRecorrido(convertirEnVector(cadena)));\r\n                if(!pasos) document.getElementById(\"iniciar\").classList.remove(\"desactivado\");\r\n                else document.getElementById(\"siguiente\").classList.remove(\"desactivado\");                \r\n                document.getElementById(\"cargar\").classList.add(\"cargado\");\r\n            }\r\n        } \r\n\r\n        if(e.target.id.includes(\"iniciar\")){\r\n            console.log(\"Clickaste => \",\"inicar\");\r\n            if(document.getElementById(\"iniciar\").classList.contains(\"desactivado\")){\r\n                //alert(\"Mientras la cadena de entrada este vacia o sea incorrecta, no puedes iniciar\\nRecuerda cargar la maquina antes de iniciar\");\r\n                if(document.getElementById(\"cargar\").classList.contains(\"desactivado\")){\r\n                    MySwal.fire({                        \r\n                        title: \"Error al iniciar\",\r\n                        html: <p>Ten en cuenta las siguientes recomendaciones: <br/><br/>\r\n                            1.) Recuerda cargar la maquina y mientras la cadena de entrada este vacia o sea    incorrecta, no puedes iniciar. <br/><br/>\r\n                            2.) Si ya iniciaste un proceso debes esperar a que este finalice. \r\n                        </p>,\r\n                        footer: \"ERROR\",\r\n                        icon: 'error'\r\n                    });\r\n                }\r\n                else{\r\n                    if(!document.getElementById(\"cargar\").classList.contains(\"cargado\") && (cadenaAMontar.length === 0)){\r\n                        MySwal.fire({\r\n                            title: \"Oops...\",\r\n                            html: <p>Oye debes cargar la maquina </p>,\r\n                            icon: \"warning\"\r\n                        });\r\n                    }\r\n                    if (!document.getElementById(\"cargar\").classList.contains(\"cargado\") && (cadenaAMontar.length !== 0)) {                        \r\n                        MySwal.fire({\r\n                            title: \"Opps....\",\r\n                            html: \"Si notas que la cinta ahora solo tiene 'a', debes cargar la maquina de nuevo. \",\r\n                            icon: \"warning\"\r\n                       });\r\n\r\n                    }\r\n                    if(document.getElementById(\"iniciar\").classList.contains(\"corriendo\")){                     \r\n                        MySwal.fire({\r\n                            title: \"Opps....\",\r\n                            html: \"La simulacion esta corriendo, deja que termine. \",\r\n                            icon: \"warning\"\r\n                       });\r\n                    }\r\n                }\r\n            }\r\n            else{\r\n                if(recorrido.length === 0){\r\n                    MySwal.fire({\r\n                        title: \"Opps....\",\r\n                        html: \"No has cargado la maquina no puedes iniciar el proceso. \",\r\n                        icon: \"warning\"\r\n                   });\r\n                }\r\n                else{\r\n                    console.log(\"iniciar:> \",recorrido);\r\n                    //obteniendo velocidad\r\n                    console.log(velocidad);\r\n                    let rapidez = obtenerVelocidad(velocidad);\r\n                    //desactiva cuando se le da click he inicia el proceso\r\n                    document.getElementById(\"iniciar\").classList.add(\"desactivado\");\r\n                    document.getElementById(\"iniciar\").classList.add(\"corriendo\");\r\n                    //desactivando botones de toggle y cargar\r\n                    document.getElementById(\"cargar\").classList.add(\"desactivado\");\r\n                    document.getElementById(\"palanca\").classList.add(\"desactivado\");\r\n                    var i = 0;\r\n                    var network = red();                    \r\n                    var idInterval = setInterval(()=>{                        \r\n                        if(i < recorrido.length){\r\n                            //resaltando estado\r\n                            network.setSelection({nodes:recorrido[i].resalta.nodo, edges:recorrido[i].resalta.enlace});\r\n                            setTimeout(()=>{\r\n                                network.setSelection({nodes:[4]});\r\n                            },rapidez-100)\r\n\r\n                            //cambiando lo que hay en el vector\r\n                            let parcial = construirNuevoVector(recorrido[i].indice,recorrido[i].reemplazaPor,cadenaAMontar);                            \r\n                            console.log(\"cadenaParcial => \",parcial);\r\n                            establecerCadenaEnLaCinta(convertirEnVectorAux(parcial.join('')));\r\n                            console.log(\"intervalo     => \",i);\r\n                            //muevete\r\n                            document.getElementById(recorrido[i].clickEn).click();    \r\n                            i++;\r\n                        }\r\n                        else{\r\n                            \r\n                            document.getElementById(\"iniciar\").classList.remove(\"corriendo\");\r\n                            document.getElementById(\"cargar\").classList.remove(\"cargado\");\r\n                            //activando nuevamente botones cargar y toggle\r\n                            if(regex.test(document.getElementById(\"entrada\").value)){\r\n                                document.getElementById(\"cargar\").classList.remove(\"desactivado\");\r\n                            }\r\n                            document.getElementById(\"palanca\").classList.remove(\"desactivado\");\r\n\r\n                            //cuando termine queda en el ultimo estado\r\n                            network.setSelection({nodes:[3]})\r\n                            MySwal.fire({\r\n                                title: \"Finalizado\",\r\n                                text: \"Proceso terminado con exito.\",\r\n                                icon: \"success\"\r\n                            });\r\n\r\n                            clearInterval(idInterval);\r\n                        }\r\n                    },rapidez);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n        if(e.target.id.includes(\"siguiente\")){\r\n            console.log(\"Clickaste => \",\"siguiente\");\r\n            if(document.getElementById(\"siguiente\").classList.contains(\"desactivado\")){                               \r\n                if(document.getElementById(\"cargar\").classList.contains(\"desactivado\")){   \r\n                    MySwal.fire({\r\n                        title: \"Error\",\r\n                        html: <p>Recuerda cargar la maquina <br></br> y mientras la cadena de entrada este vacia o sea incorrecta, no puedes hacer el paso a paso.</p>,\r\n                        footer: \"ERROR\",\r\n                        icon: 'error',\r\n                    });\r\n                }\r\n                else{\r\n                    if(!document.getElementById(\"cargar\").classList.contains(\"cargado\") && (cadenaAMontar.length === 0)){\r\n                        MySwal.fire({\r\n                            title: \"Opps...\",\r\n                            html: \"Oye debes cargar la maquina\",\r\n                            icon: \"warning\"\r\n                        });\r\n                    }\r\n                    if (!document.getElementById(\"cargar\").classList.contains(\"cargado\") && (cadenaAMontar.length !== 0)) {                       \r\n                       MySwal.fire({\r\n                            title: \"Opps....\",\r\n                            html: \"si notas que la cinta ahora solo tiene 'a', debes cargar la maquina de nuevo \",\r\n                            icon: \"warning\"\r\n                       });\r\n                    }\r\n                }\r\n\r\n            }\r\n            else{\r\n                if(recorrido.length === 0){                    \r\n                    MySwal.fire({\r\n                        title: \"Opps....\",\r\n                        text: \"No puedes inicar el paso a paso sin antes cargar la maquina.\",\r\n                        icon: \"warning\"\r\n                    });\r\n                }\r\n                else{\r\n                    console.log(\"pasos:> \",recorrido);\r\n                    console.log(\"loongitud del recorrido\",recorrido.length);\r\n                    \r\n                    //desactivando botones de toggle y cargar\r\n                    document.getElementById(\"cargar\").classList.add(\"desactivado\");\r\n                    document.getElementById(\"palanca\").classList.add(\"desactivado\");\r\n                                        \r\n                    var network = red();\r\n                    if(j < recorrido.length){\r\n                        //resaltando estado\r\n                        network.setSelection({nodes:recorrido[j].resalta.nodo, edges:recorrido[j].resalta.enlace});\r\n                        setTimeout(()=>{\r\n                            network.setSelection({nodes:[4]});\r\n                        },400)\r\n                        setTimeout(()=>{\r\n                            network.setSelection({nodes:recorrido[j].resalta.nodo});\r\n                        },500)\r\n\r\n                        //cambiando lo que hay en el vector\r\n                        let parcial = construirNuevoVector(recorrido[j].indice,recorrido[j].reemplazaPor,cadenaAMontar);                        \r\n                        console.log(\"cadenaParcial => \",parcial);                        \r\n                        establecerCadenaEnLaCinta(convertirEnVectorAux(parcial.join('')));\r\n                        console.log(\"intervalo     => \",j);\r\n                        //muevete\r\n                        document.getElementById(recorrido[j].clickEn).click();\r\n\r\n                        setJ(j+1);\r\n                    }\r\n                    else{\r\n                        document.getElementById(\"siguiente\").classList.add(\"desactivado\");\r\n                        document.getElementById(\"cargar\").classList.remove(\"cargado\");\r\n\r\n                        //activando nuevamente botones cargar y toggle\r\n                        if(regex.test(document.getElementById(\"entrada\").value)){\r\n                            document.getElementById(\"cargar\").classList.remove(\"desactivado\");\r\n                        }\r\n                        document.getElementById(\"palanca\").classList.remove(\"desactivado\");\r\n\r\n                        //aqui termina el recorrido ps\r\n                        MySwal.fire({\r\n                            title: \"Finalizado\",\r\n                            text: \"Proceso terminado con exito.\",\r\n                            icon: \"success\"\r\n                        });\r\n                        setJ(0);\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const handleClickPasos = e => {\r\n        if(!document.getElementById(\"palanca\").classList.contains(\"desactivado\")){\r\n            setPasos(!pasos)\r\n            // console.log(pasos);\r\n        }\r\n        else{\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    const muestraBotones = () => {\r\n        if(pasos){\r\n            return(\r\n                <div className=\"pack-botones-pasos\">\r\n                    <p>Para que la ejecución avance haga click en el siguiente boton:</p>\r\n                    <a id=\"siguiente\" name=\"siguiente\" onClick={handleClick} className=\"siguiente desactivado\">\r\n                        <p id=\"t_siguiente\" >Siguiente</p>\r\n                        <img id=\"i_siguiente\" src=\"https://img.icons8.com/material-sharp/48/000000/circled-chevron-right.png\"/>\r\n                    </a>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return(\r\n                <div className=\"pack-botones-sin_pasos\">\r\n                    <p className=\"titulo__slider\">Seleciona aqui la velocidad de ejecución</p>\r\n                    <div className=\"contenedor_deslizable\">\r\n                        <input onChange={handleChange} name=\"deslizante\" className=\"deslizante\" type=\"range\" min=\"0\" max=\"100\" step=\"10\"/>\r\n                        <p id=\"value_deslizable\" className=\"value_deslizable\">{velocidad}%</p>\r\n                    </div>\r\n                    <div className=\"contenedor__botones\">\r\n                        <a id=\"iniciar\" name=\"iniciar\" onClick={handleClick} className=\"iniciar desactivado\">\r\n                            <p id=\"t_iniciar\" >Iniciar</p>\r\n                            <img id=\"i_iniciar\" src=\"https://img.icons8.com/ios-filled/50/000000/chevron-right.png\"/>\r\n                        </a>\r\n                        {/* <a id=\"pausar\" name=\"pausar\" onClick={handleClick} className=\"pausar\">\r\n                            <p id=\"t_pausar\" >Pausar</p>\r\n                            <img id=\"i_pausar\" src=\"https://img.icons8.com/android/48/000000/pause.png\"/>\r\n                        </a> */}\r\n                        {/* <a id=\"reIniciar\" name=\"reiniciar\" onClick={handleClick} className=\"reiniciar\">\r\n                            <p id=\"t_reIniciar\" >Reiniciar</p>\r\n                            <img id=\"i_reIniciar\" src=\"https://img.icons8.com/metro/52/000000/restart.png\"/>\r\n                        </a> */}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const retorna = () => (\r\n        <form>\r\n            <p>Configuración y parametrización</p>\r\n            <div className=\"wrapper__input\">\r\n                <label className=\"label-cadena\" htmlFor=\"cadena\">Ingresa aqui la cadena a analizar<br></br> (Solo se admiten minusculas).</label>\r\n                <div id=\"cadena\" className=\"input\">\r\n                    <input id=\"entrada\" onChange={handleChange} type=\"text\" autoComplete=\"off\" name=\"cadena\" placeholder=\"aabbb, min: 2, max: 18\" />\r\n                    <i id=\"icono\" className=\"fas fa-times-circle\"></i>\r\n                    <p className=\"sms activo\">{sms}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"wrapper__input\">\r\n                <p>¿DESEAS HACER EL PASO A PASO MANUAL?</p>\r\n                <input className=\"toggle-button\" onClick={handleClickPasos} type=\"checkbox\" name=\"porPasos\" id=\"porPasos\"/>\r\n                <label id=\"toggleState\" id=\"palanca\" className=\"label-custom\" htmlFor=\"porPasos\"></label>\r\n                <a id=\"cargar\" name=\"cargar\" onClick={handleClick} className=\"cargar\">\r\n                    <p id=\"t_cargar\" >Cargar Maquina</p>\r\n                    <img id=\"i_cargar\" src=\"https://img.icons8.com/metro/52/000000/submit-progress.png\"/>\r\n                </a>\r\n            </div>\r\n            {\r\n                muestraBotones()\r\n            }\r\n        </form>\r\n    );\r\n    return retorna();\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    cadenaAMontar: state.cadenaAMontar,\r\n    recorrido: state.recorrido\r\n})\r\n\r\nconst mapDispathcToProps = dispatch => ({\r\n\r\n    establecerCadenaEnLaCinta(cadena){\r\n        dispatch({\r\n            type: 'ESTABLECER_CADENA',\r\n            cadena\r\n        })\r\n    },\r\n\r\n    establecerRecorrido(vector){\r\n        dispatch({\r\n            type: 'ESTABLECER_RECORRIDO',\r\n            vector\r\n        })\r\n    }\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispathcToProps)(Settings);","import React from 'react';\r\nimport Diagramas from '../components/diagramas';\r\nimport Settings from '../components/settings';\r\n\r\nconst Cuerpo = () => {  \r\n\r\n    return(\r\n        <div className=\"wrap\">\r\n            <div className=\"contenedor\">\r\n                <div className=\"contenedor__izquierda\">\r\n                    <h3>Representación del autómata</h3>\r\n                    <Diagramas/>\r\n                </div>\r\n                <div className=\"contenedor__derecha\">\r\n                    <Settings/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cuerpo;","import { createStore } from 'redux';\r\n\r\nconst initialState = {\r\n    cadenaAMontar: [],\r\n    recorrido: []\r\n}\r\n\r\nconst reducer = (state = initialState,action) => {\r\n    \r\n    switch(action.type){\r\n\r\n        case \"ESTABLECER_CADENA\":\r\n            console.log(\"parametro\",action.cadena);\r\n            return {\r\n                ...state,\r\n                cadenaAMontar: action.cadena\r\n            }\r\n\r\n        case \"ESTABLECER_RECORRIDO\":\r\n            return {\r\n                ...state,\r\n                recorrido: action.vector\r\n            }\r\n\r\n    }\r\n    \r\n    return state;\r\n}\r\n\r\nexport default createStore(reducer);","import React,{useEffect} from 'react';\r\nimport Navegacion from './components/navegacion';\r\nimport Footer from './components/footer';\r\nimport Cuerpo from './components/cuerpo';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nfunction App() {\r\n    \r\n  useEffect(()=>{\r\n    \r\n    MySwal.fire({\r\n        \r\n      title: \"Bienvenido\",\r\n      html: <p> <strong>Te damos la bienvenida a este simulador de la Maquina de Turing</strong> <br/><br/>\r\n            \r\n            Este simulador tiene un caso de uso especifico:<br/><br/>\r\n            ➤ Te permitirá ingresar una cadena con combinaciones cualesquiera de a y b en minúscula. <br/><br/>\r\n            ➤ Luego debes cargar la máquina para la simulación (La cadena que escribiste se ubicara en la cinta). <br/><br/>\r\n            ➤ Posterior a ello tendrás que seleccionar el modo en que deseas ver el proceso, puedes hacerlo paso a paso \r\n            de forma manual o puedes dejar que la simulación sea automática, en caso de que optes por esta última opción \r\n            tendrás que establecer una velocidad de simulación en el slider, la máxima son 300 milisegundos y la mínima son 1000.<br/><br/> \r\n            ➤ Puedes cambiar de modo automático a manual y viceversa. <br/><br/>\r\n            ➤ Al dar click en los botones de \"iniciar\" y \"siguiente\" de cada modo podrás notar que la simulación convierte la cadena de \r\n            <strong> a</strong>es y <strong>b</strong>es que escribiste en una cadena que solo contiene <strong>a</strong>es a medida\r\n            que ocurre magia en el grafo y en la cinta.<br/><br/>\r\n\r\n            ⏩ Puedes ver la asignación formal <a href=\"https://docs.google.com/document/d/1bIvmPI2RZjalk3Hjvaf1gIRp8JKRpL7LtfM8W0IQ5Po/edit\" target=\"_black\" ><strong>aquí</strong></a> ⏪ <br/><br/>\r\n            ⏩ y el repositorio de este proyecto <a href=\"https://github.com/joralsiz95/maquinaTuring\" target=\"_black\" ><strong>aquí</strong></a> ⏪ <br/><br/>\r\n\r\n            <strong>✌ DISFRUTALO ✌</strong> \r\n            </p>\r\n    \r\n    });\r\n  \r\n  },[])\r\n    \r\n  return (\r\n        <Provider store={store} >\r\n          <main>\r\n\r\n            <Navegacion/>\r\n            <Cuerpo/>\r\n            <Footer/>\r\n          </main>\r\n        </Provider>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './styles/main.scss';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}